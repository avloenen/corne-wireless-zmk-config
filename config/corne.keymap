/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BBACK LA(LEFT)
#define BFORW LA(RIGHT)
#define WCURR LC(F9)  //WINL LS(LG(TAB))
#define WALL LC(F10)  //WINR LG(TAB)
//#define VDISP LG(F8)

&mt {
	tapping-term-ms = <150>;
};
        

/ {
    	conditional_layers {
        	compatible = "zmk,conditional-layers";
        	tri_layer_1 {
            		if-layers = <1 2>;
            		then-layer = <8>;
        	};
		tri_layer_2 {
			if-layers = <5 6>;
			then-layer = <8>;
		};
	};


	behaviors {
		lhm: left_homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <280>;
			quick-tap-ms = <175>;
			require-prior-idle-ms = <110>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
			hold-trigger-on-release;
		};

		rhm: right_homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <280>;
			quick-tap-ms = <175>;
			require-prior-idle-ms = <110>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
			hold-trigger-on-release;
		};

		llt: left_layer_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			require-prior-idle-ms = <100>;
			flavor = "balanced";
			bindings = <&mo>, <&kp>;
//			hold-trigger-key-positions = <6 7 8 9 10 11 18 23 30 31 32 33 34 35>;
//			hold-trigger-on-release;
		};

		rlt: right_layer_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			require-prior-idle-ms = <100>;
			flavor = "balanced";
			bindings = <&mo>, <&kp>;
//			hold-trigger-key-positions = <0 1 2 3 4 5 12 17 24 25 26 27 28 29>;
//			hold-trigger-on-release;
		};
		     
		skq: sticky_keys_quick_release {
			compatible = "zmk,behavior-sticky-key";
			#binding-cells = <1>;
			bindings = <&kp>;
			release-after-ms = <2000>;
			quick-release;
			ignore-modifiers;
		};

//		tdtab: tap_dance_tab_mirror {
//			compatible = "zmk,behavior-tap-dance";
//			#binding-cells = <0>;
//			tapping-term-ms = <175>;
//			bindings = <&kp TAB>, <&tog 4>;
//		};
//		
// 		tdmin: tap_dance_minus_mirror {
//			compatible = "zmk,behavior-tap-dance";
//			#binding-cells = <0>;
//			tapping-term-ms = <175>;
//			bindings = <&kp MINUS>, <&tog 4>;
//		};

	};

	keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |  -  |
// | ESC | C_A | A_S | S_D | G_F |  G  |   |  H  | G_J | S_K | A_L | C_; |  '  |
// |  `  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |  \  |
//                   | RALT| SFT | BSPC|   | ENT | SPC | TAB |


                        bindings = <
   &kp TAB   &kp Q        &kp W       &kp E         &kp R         &kp T       &kp Y      &kp U       &kp I        &kp O       &kp P           &kp MINUS
   &kp ESC   &lhm LCTRL A &lhm LALT S &lhm LSHFT D  &lhm LGUI F   &kp G       &kp H      &rhm LGUI J &rhm LSHFT K &rhm LALT L &rhm LCTRL SEMI &kp SQT
   &kp GRAVE &kp Z        &kp X       &kp C         &kp V         &kp B       &kp N      &kp M       &kp COMMA    &kp DOT     &kp FSLH        &kp BSLH
                                      &llt 1 RALT   &mt LSHFT SPC &llt 2 BSPC &rlt 2 RET &rlt 3 SPC  &rlt 1 TAB
                        >;
                };
                navigation_layer {
// -----------------------------------------------------------------------------------------
// | MIRR | BRID | BRIU | MUTE | VOLD | VOLU |   | HOME | PG_DN | PG_UP | END   |  | MIRR |
// | ESC  | CTRL | ALT  | SHFT | GUI  |      |   | LEFT | DOWN  |  UP   | RIGHT |  |      |
// | BT1  | BT2  | BT3  |      | BACK | FORW |   | CWRD | WCURR | WALL  |       |  |      |
//                      | RALT | SHFT | BSPC |   | ENT  | NUM   | TAB   |

                        bindings = <
   &tog 4       &kp C_BRI_DN &kp C_BRI_UP &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP &kp HOME   &kp PG_DN &kp PG_UP &kp END   &none &tog 4
   &trans       &skq LCTRL   &skq LALT    &skq LSHFT  &skq LGUI     &none        &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT &none &none
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none       &kp BBACK     &kp BFORW    &caps_word &kp WCURR &kp WALL  &none     &none &none
                          	          &llt 1 RALT &mt LSHFT SPC &llt 2 BSPC  &rlt 2 RET &tog 3    &rlt 1 TAB
                        >;
                };
                function_layer {
// -----------------------------------------------------------------------------------------
// |     | BRID | BRIU | MUTE | VOLD | VOLU |   |      | F7  | F8  | F9 | F10 |  |
// | ESC | CTRL | ALT  | SHFT | GUI  |      |   |      | F4  | F5  | F6 | F11 |  |
// | BT1 | BT2  | BT3  |      |      |      |   | CWRD | F1  | F2  | F3 | F12 |  |
//                     | RALT | SHFT | BSPC |   | ENT  | NUM | TAB |

                        bindings = <
   &none        &kp C_BRI_DN &kp C_BRI_UP &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP &none      &kp F7 &kp F8    &kp F9 &kp F10 &none
   &trans       &skq LCTRL   &skq LALT    &skq LSHFT  &skq LGUI     &none        &none      &kp F4 &kp F5    &kp F6 &kp F11 &none
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none       &none         &none        &caps_word &kp F1 &kp F2    &kp F3 &kp F12 &none
                    	                  &llt 1 RALT &mt LSHFT SPC &llt 2 BSPC  &rlt 2 RET &tog 3 &rlt 1 TAB
                        >;
                };
		numpad_layer {
// -----------------------------------------------------------------------------------------
//  | NUM |     |     |     |      | LBRC|   | RBRC|  7  |  8  |  9  | 0 | - |
//  | ESC | CTRL| ALT | SHFT| GUI  | LPAR|   | RPAR|  4  |  5  |  6  | * | + |
//  |     |     |     |     |      | LBKT|   | RBKT|  1  |  2  |  3  | / | = |
//                    |  .  | SHFT | BSPC|   | ENT |     |  ,  |

			bindings = <
    &tog 3  &none      &none     &none      &none         &kp LBRC &kp RBRC &kp N7     &kp N8   &kp N9 &kp N0       &kp MINUS
    &kp ESC &skq LCTRL &skq LALT &skq LSHFT &skq LGUI     &kp LPAR &kp RPAR &kp N4     &kp N5   &kp N6 &kp ASTERISK &kp PLUS
    &none   &none      &none     &none      &none         &kp LBKT &kp RBKT &kp N1     &kp N2   &kp N3 &kp FSLH     &kp EQUAL
                                 &kp DOT    &mt LSHFT SPC &kp BSPC &kp RET  &rlt 3 SPC &kp COMMA    
			>;
		};
		mirror_layer {
// -----------------------------------------------------------------------------------------
//  | - | P | O | I   | U   | Y   |   | T    | R   | E    | W | Q | TAB |
//  | ' | ; | L | K   | J   | H   |   | G    | F   | D    | S | A | ESC |
//  | \ | / | . | ,   | M   | N   |   | B    | V   | C    | X | Z |  `  |
//              | TAB | SPC | ENT |   | BSPC | SFT | RALT |  

			bindings = <
    &kp MINUS &kp P           &kp O       &kp I        &kp U       &kp Y      &kp T       &kp R         &kp E        &kp W       &kp Q        &kp TAB
    &kp SQT   &lhm LCTRL SEMI &lhm LALT L &lhm LSHFT K &lhm LGUI J &kp H      &kp G       &rhm LGUI F   &rhm LSHFT D &rhm LALT S &rhm LCTRL A &kp ESC
    &kp BSLH  &kp FSLH        &kp DOT     &kp COMMA    &kp M       &kp N      &kp B       &kp V         &kp C        &kp X       &kp Z        &kp GRAVE
                                          &llt 5 TAB   &llt 7 SPC  &llt 6 RET &rlt 6 BSPC &mt LSHFT SPC &rlt 5 RALT
			>;
		};
		navigation_mirror_layer {
// -----------------------------------------------------------------------------------------
//  | BASE |      | PG_UP | UP   | PG_DN |      |   | VOLU | VOLD | MUTE | BRIU | BRID | BASE |
//  |      | HOME | LEFT  | DOWN | RIGHT | END  |   |      | GUI  | SHFT | ALT  | CTRL | ESC  |
//  |      |      |       | WALL | WCURR | CAPS |   | FORW | BACK |      | BT3  | BT2  | BT1  |
//                        | TAB  | NUM   | ENT  |   | BSPC | SHFT | RALT |

			bindings = <
    &tog 4 &none    &kp PG_UP &kp UP     &kp PG_DN &none      &kp C_VOL_UP &kp C_VOL_DN  &kp C_MUTE  &kp C_BRI_UP &kp C_BRI_DN &tog 4
    &none  &kp HOME &kp LEFT  &kp DOWN   &kp RIGHT &kp END    &none        &skq LGUI     &skq LSHFT  &skq LALT    &skq LCTRL   &trans
    &none  &none    &none     &kp WALL   &kp WCURR &caps_word &kp BFORW    &kp BBACK     &none       &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0
                              &llt 5 TAB &tog 7    &lt 6 RET  &rlt 6 BSPC  &mt LSHFT SPC &rlt 5 RALT
			>;
		};
		function_mirror_layer { // -----------------------------------------------------------------------------------------
//  |  | F10 | F9 | F8  | F7  |      |   | VOLU | VOLD | MUTE | BRIU | BRID |     |
//  |  | F11 | F6 | F5  | F4  |      |   |      | GUI  | SHFT | ALT  | CTRL | ESC |
//  |  | F12 | F3 | F2  | F1  | CAPS |   |      |      |      | BT3  | BT2  | BT1 |
//                | TAB | NUM | ENT  |   | BSPC | SHFT | RALT |

			bindings = <
    &none &kp F10 &kp F9 &kp F8     &kp F7 &none      &kp C_VOL_UP &kp C_VOL_DN  &kp C_MUTE  &kp C_BRI_UP &kp C_BRI_DN &none
    &none &kp F11 &kp F6 &kp F5     &kp F4 &none      &none        &skq LGUI     &skq LSHFT  &skq LALT    &skq LCTRL   &trans
    &none &kp F12 &kp F3 &kp F2     &kp F1 &caps_word &none        &none         &none       &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0
                         &llt 5 TAB &tog 7 &llt 6 RET &rlt 6 BSPC  &mt LSHFT SPC &rlt 5 RALT
			>;
		};
		numpad_mirror_layer {
// -----------------------------------------------------------------------------------------
//  | - | 0 | 9 | 8 | 7   | RBRC |   | LBRC |      |      |     |      | NUM |
//  | + | * | 6 | 5 | 4   | RPAR |   | LPAR | GUI  | SHFT | ALT | CTRL | ESC |
//  | = | / | 3 | 2 | 1   | RBKT |   | LBKT |      |      |     |      |     |
//              | , | SPC | ENT  |   | BSPC | SHFT |  .   |

			bindings = <
    &kp MINUS &kp N0       &kp N9 &kp N8    &kp N7     &kp RBRC &kp LBRC &none         &none      &none     &none      &tog 7
    &kp PLUS  &kp ASTERISK &kp N6 &kp N5    &kp N4     &kp RPAR &kp LPAR &skq LGUI     &skq LSHFT &skq LALT &skq LCTRL &kp ESC
    &kp EQUAL &kp FSLH     &kp N3 &kp N2    &kp N1     &kp RBKT &kp LBKT &none         &none      &none     &none      &none 
                                  &kp COMMA &llt 7 SPC &kp RET  &kp BSPC &mt LSHFT SPC &kp DOT   
			>;
		};
		adjust_layer {
// -----------------------------------------------------------------------------------------
//  | BT D0 | BT D1 | BT D2 |  |  | RESET |  | RESET |  |  | BT D2 | BT D1 | BT D0 |
//  | S_OFF |       |       |  |  | BTCLR |  | BTCLR |  |  |       |       | S_OFF |
//  |       |       |       |  |  | BTOUT |  | BTOUT |  |  |       |       |       |
//                          |  |  |       |  |       |  |  |

			bindings = <
    &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &none  &none  &sys_reset   &sys_reset   &none  &none  &bt BT_DISC 2 &bt BT_DISC 1 &bt BT_DISC 0
    &none         &none         &none         &none  &none  &bt BT_CLR   &bt BT_CLR   &none  &none  &none         &none         &none
    &bootloader   &none         &none         &none  &none  &out OUT_TOG &out OUT_TOG &none  &none  &none         &none         &bootloader 
                                              &trans &trans &trans       &trans       &trans &trans
			>;
		};
        };
};
